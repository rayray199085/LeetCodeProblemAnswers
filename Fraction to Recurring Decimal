/**
 * Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.
 *
 * If the fractional part is repeating, enclose the repeating part in parentheses.
 *
 * Example 1:
 *
 * Input: numerator = 1, denominator = 2
 * Output: "0.5"
 * Example 2:
 *
 * Input: numerator = 2, denominator = 1
 * Output: "2"
 * Example 3:
 *
 * Input: numerator = 2, denominator = 3
 * Output: "0.(6)"
 */
class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        StringBuilder sb = new StringBuilder();
        if (numerator < 0 && denominator > 0 || numerator > 0 && denominator < 0) sb.append("-");
        long num = Math.abs((long)numerator);
        long deno = Math.abs((long)denominator);
        sb.append(num/deno);
        long remain = num % deno;
        if (remain != 0) sb.append('.');
        Map<Long, Integer> posMap = new HashMap<>();
        while (remain != 0 && !posMap.containsKey(remain)) {
            posMap.put(remain, sb.length());
            sb.append(remain*10/deno);
            remain = (remain * 10) % deno;
        }
        if (remain != 0) {
            sb.insert((int)posMap.get(remain), '(');
            sb.append(')');
        }
        return sb.toString();
    }
}
