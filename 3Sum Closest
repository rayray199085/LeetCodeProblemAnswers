/**
 * Given an array nums of n integers and an integer target, 
 * find three integers in nums such that the sum is closest to target.
 * Return the sum of the three integers. You may assume that each input
 * would have exactly one solution.
 */
 
 class Solution {
     public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int gap = Integer.MAX_VALUE;
        int result = 0;
        for (int i = 0; i < nums.length - 2; i++) {
            int j = i + 1;
            int k = nums.length - 1;
            while (j < k) {

                if (target > nums[i] + nums[j] + nums[k]) {
                   if(target - (nums[i] + nums[j] + nums[k])< gap)
                   {
                       gap = target - (nums[i] + nums[j] + nums[k]);
                       result = nums[i] + nums[j] + nums[k];
                   }
                    j++;
                } else if (target < nums[i] + nums[j] + nums[k]) {
                    if(nums[i] + nums[j] + nums[k] - target< gap)
                    {
                        gap = nums[i] + nums[j] + nums[k] - target;
                        result = nums[i] + nums[j] + nums[k];
                    }
                    k--;
                } else {
                    return nums[i] + nums[j] + nums[k];
                }

            }
        }
        return result;
    }
}
 
