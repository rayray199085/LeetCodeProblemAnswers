/**
 * Given an array nums of n integers and an integer target, 
 * are there elements a, b, c, and d in nums such that a + b + c + d = target? 
 * Find all unique quadruplets in the array which gives the sum of target.
 */
 
 class Solution {
    public static List<List<Integer>> fourSum(int[] nums, int target) {
        Set<List<Integer>> setList = new HashSet<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++) {
            for (int j = i + 1; j < nums.length - 2; j++) {
                int p = j + 1;
                int q = nums.length - 1;
                while (p < q) {
                    if(nums[i]+nums[j]+nums[p]+nums[q]<target){
                        p++;
                    }
                    else if(nums[i]+nums[j]+nums[p]+nums[q]>target){
                        q--;
                    }
                    else{
                        List<Integer> list = new ArrayList<>();
                        list.addAll(Arrays.asList(nums[i], nums[j], nums[p],nums[q]));
                        setList.add(list);
                        while (p < q && nums[p] == nums[p + 1]) {
                            p++;
                        }
                        while (p < q && nums[q] == nums[q - 1]) {
                            q--;
                        }
                        p++;
                        q--;
                    }
                }
            }
        }
        List<List<Integer>> listList = new ArrayList<>();
        listList.addAll(setList);
        return listList;
    }
}
