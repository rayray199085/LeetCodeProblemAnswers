/**
 * Given a m x n grid filled with non-negative numbers,
 *
 * find a path from top left to bottom right which minimizes the sum of all numbers along its path.
 *
 * Note: You can only move either down or right at any point in time.
 *
 * Example:
 *
 * Input:
 * [
 *   [1,3,1],
 *   [1,5,1],
 *   [4,2,1]
 * ]
 * Output: 7
 * Explanation: Because the path 1→3→1→1→1 minimizes the sum.
 */
 
class Solution {
    public static int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] board = new int[m][n];
        board[0][0] = grid[0][0];
        for (int i = 1; i < m; i++) {
            board[i][0] = board[i - 1][0] + grid[i][0];
        }
        for (int i = 1; i < n; i++) {
            board[0][i] = board[0][i - 1] + grid[0][i];
        }
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                board[i][j] = grid[i][j] + Math.min(board[i - 1][j], board[i][j - 1]);
            }
        }
        return board[m-1][n-1];
    }
}
