/**
 * Given two integers dividend and divisor, divide two integers without using multiplication, division and mod operator.
 *
 * Return the quotient after dividing dividend by divisor.
 *
 * The integer division should truncate toward zero.
 *
 * Example 1:
 *
 * Input: dividend = 10, divisor = 3
 * Output: 3
 * Example 2:
 *
 * Input: dividend = 7, divisor = -3
 * Output: -2
 */
 
 class Solution {
    
     public int divide(int dividend, int divisor) {
        int sign = 1;
        if ((dividend > 0 && divisor < 0) || (dividend < 0 && divisor > 0)) {
            sign = -1;
        }
        long lDividend = Math.abs((long)dividend);
        long lDivisor = Math.abs((long)divisor);
        
        if (lDividend < lDivisor || lDividend == 0) {
            return 0;
        }
        long lResult = recursiveDivide(lDividend,lDivisor);
        int result = 0;
        if(lResult>Integer.MAX_VALUE){
            result = (sign == 1) ? Integer.MAX_VALUE : Integer.MIN_VALUE;
        }
        else {
            result = (int) (lResult * sign);
        }
        return result;
    }

    private long recursiveDivide(long lDividend, long lDivisor) {
        if(lDividend<lDivisor){
            return 0;
        }
        long sum = lDivisor;
        long multiple = 1;
        while((sum + sum)<=lDividend){
            sum += sum;
            multiple += multiple;
        }
        return multiple + recursiveDivide(lDividend - sum,lDivisor);
    }
}
