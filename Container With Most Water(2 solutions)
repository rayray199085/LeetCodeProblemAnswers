/**
 * Given n non-negative integers a1, a2, ..., an ,
 * where each represents a point at coordinate (i, ai). n vertical
 * lines are drawn such that the two endpoints of line i is at (i, ai)
 * and (i, 0). Find two lines, which together with x-axis forms a container,
 * such that the container contains the most water.
 * <p>
 * Note: You may not slant the container and n is at least 2.
 */
 // solution 1
 class Solution1 {
    public int maxArea(int[] height) {
        int mostArea = 0;
        for (int i = 0; i < height.length - 1; i++) {
            for (int j = i + 1; j < height.length; j++) {
                int area = 0;
                if (height[i] > height[j]) {
                    area = height[j] * (j - i);
                } else {
                    area = height[i] * (j - i);
                }
                if (area > mostArea) {
                    mostArea = area;
                }
            }
        }
        return mostArea;
    }
}

//solution2
class Solution2 {
    public int maxArea(int[] height) {
        int positionStart = 0;
        int maxArea = 0;
        int positionEnd = height.length - 1;
        while (positionStart < positionEnd) {
            int area = 0;
            if (height[positionStart] > height[positionEnd]) {
                area = height[positionEnd] * (positionEnd - positionStart);
                positionEnd--;
            }
            else{
                area = height[positionStart] * (positionEnd - positionStart);
                positionStart++;
            }
            if (area > maxArea) {
                maxArea = area;
            }
        }
        return maxArea;
    }
}
