**
 * Write a program to solve a Sudoku puzzle by filling the empty cells.
 *
 * A sudoku solution must satisfy all of the following rules:
 *
 * Each of the digits 1-9 must occur exactly once in each row.
 * Each of the digits 1-9 must occur exactly once in each column.
 * Each of the the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.
 * Empty cells are indicated by the character '.'.
 */
 
 class Solution {
    public void solveSudoku(char[][] board) {
        if(board.length==0){
            return;
        }
        recursiveSearch(board);
    }

    private boolean recursiveSearch(char[][] board) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (".".equals(String.valueOf(board[i][j]))) {
                    for (char k = '1'; k <= '9'; k++) {
                        if (isValidSuDoku(board, i, j, k)) {
                            board[i][j] = k;
                            if (recursiveSearch(board)) {
                                return true;
                            } else {
                                board[i][j] = '.';
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }

    public boolean isValidSuDoku(char[][] board, int row, int column, char c) {
        // check the horizontal direction
        for (int j = 0; j < 9; j++) {
            if (board[row][j] == c) {
                return false;
            }
        }
        // check the vertical direction
        for (int i = 0; i < 9; i++) {
            if (board[i][column] == c) {
                return false;
            }
        }

        // check 3 x 3 sub-box
        row = row / 3 * 3;
        column = column / 3 * 3;
        for (int i = row; i < row + 3; i++) {
            for (int j = column; j < column + 3; j++) {
                if (board[i][j] == c) {
                    return false;
                }

            }
        }
        return true;
    }
}
