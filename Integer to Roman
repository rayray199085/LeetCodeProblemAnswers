/**
 * Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
 * For example, two is written as II in Roman numeral, 
 * just two one's added together. Twelve is written as, 
 * XII, which is simply X + II. The number twenty seven is 
 * written as XXVII, which is XX + V + II.
 *
 * Roman numerals are usually written largest to smallest from left to 
 * right. However, the numeral for four is not IIII. Instead, the number 
 * four is written as IV. Because the one is before the five we subtract it 
 * making four. The same principle applies to the number nine, which is written
 * as IX. There are six instances where subtraction is used:
 *
 * I can be placed before V (5) and X (10) to make 4 and 9. 
 * X can be placed before L (50) and C (100) to make 40 and 90. 
 * C can be placed before D (500) and M (1000) to make 400 and 900.
 * Given an integer, convert it to a roman numeral. Input is guaranteed to be 
 * within the range from 1 to 3999.
 */
 
 class Solution {
   public String intToRoman(int num) {
        Map<Integer, String> map = initMap();
        StringBuffer stringBuffer = new StringBuffer();
        int[] ints = {1, 5, 10, 50, 100, 500, 1000};
        int i = ints.length - 1;
        while (num > 0 || i < 0) {
            if (num >= ints[i]) {
                num = num - ints[i];
                stringBuffer.append(map.get(ints[i]));
                
            } else {
                i--;
            }
        }
        String result = stringBuffer.toString();

        result = result.replaceAll("D{1}C{4}", "CM");//900
        result = result.replaceAll("([^D])?C{4}", "$1CD");//400

        result = result.replaceAll("L{1}X{4}", "XC");//90
        result = result.replaceAll("([^L])?X{4}", "$1XL");//40

        result = result.replaceAll("V{1}I{4}", "IX");//9
        result = result.replaceAll("([^V])?I{4}", "$1IV");//4

        return result;
    }

    public Map<Integer, String> initMap() {
        Map<Integer, String> map = new HashMap<>();
        map.put(1, "I");
        map.put(5, "V");
        map.put(10, "X");
        map.put(50, "L");
        map.put(100, "C");
        map.put(500, "D");
        map.put(1000, "M");
        return map;
    }
}
