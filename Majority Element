**
 * class Solution {
 *     public int majorityElement(int[] nums) {
 *         Map<Integer,Integer> map = new HashMap<>();
 *         for(int value : nums){
 *             if(map.get(value) == null){
 *                 map.put(value,1);
 *             }else{
 *                 map.put(value, map.get(value) + 1);
 *             }
 *         }
 *         int maxCount = 0;
 *         int resKey = 0;
 *         for(int key : map.keySet()){
 *             if(map.get(key) > maxCount){
 *                 resKey = key;
 *                 maxCount = map.get(key);
 *             }
 *         }
 *         return resKey;
 *     }
 * }
 */
 class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer,Integer> map = new HashMap<>();
        for(int value : nums){
            if(map.get(value) == null){
                map.put(value,1);
            }else{
                map.put(value, map.get(value) + 1);
            }
        }
        int maxCount = 0;
        int resKey = 0;
        for(int key : map.keySet()){
            if(map.get(key) > maxCount){
                resKey = key;
                maxCount = map.get(key);
            }
        }
        return resKey;
    }
}
